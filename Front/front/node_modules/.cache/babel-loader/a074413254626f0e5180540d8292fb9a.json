{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\fbech\\\\Documents\\\\SIMPLON NATERRE\\\\MySQL_React_Ecommerce\\\\Front\\\\front\\\\src\\\\Component\\\\SignIn.jsx\";\nimport React, { Component } from 'react';\nimport Button from 'react-bootstrap/Button';\nimport Form from 'react-bootstrap/Form';\nimport Jumbotron from 'react-bootstrap/Jumbotron';\nimport axios from 'axios';\nimport { Redirect } from 'react-router-dom';\n\nclass SignIn extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      email: '',\n      password: '',\n      redirect: false // Redirection fausse par defaut\n\n    };\n\n    this.setRedirect = () => {\n      this.setState({\n        redirect: true\n      }); // Quand redirection devient vraie cest a dire la personne cest loger correctement\n    };\n\n    this.renderRedirect = () => {\n      if (this.state.redirect) {\n        return /*#__PURE__*/React.createElement(Redirect, {\n          to: \"/Dashboard\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 27,\n            columnNumber: 20\n          }\n        }); // Redirige vers Dashboard \n      }\n    };\n\n    this.inputemail = event => {\n      // concerne le input de email un evenement y est creer\n      this.setState({\n        email: event.target.value\n      }); // Recupere la valeur rentrer dans le input de email et le modifie en fonction de ce qui y est entrer\n    };\n\n    this.inputpassword = event => {\n      // concerne le input du password un evenement y est creer\n      this.setState({\n        password: event.target.value\n      }); // Recupere la valeur rentrer dans le input de password et le modifie en fonction de ce qui y est entrer\n    };\n\n    this.buttonsubmit = event => {\n      event.preventDefault();\n      const user = {\n        email: this.state.email,\n        password: this.state.password // user contient les data de email et passeword\n\n      };\n      axios.post(`http://localhost:4000/sign-in`, user).then(res => {\n        console.log(res.data);\n        this.setState({\n          email: ''\n        }); // Modifie les donnees et les reboot \"\"\n\n        this.setState({\n          password: ''\n        });\n      });\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 13\n      }\n    }, this.renderRedirect(), /*#__PURE__*/React.createElement(Jumbotron, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 21\n      }\n    }, \"Hello, world!\"), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 21\n      }\n    }, \"This is a simple hero unit, a simple jumbotron-style component for calling extra attention to featured content or information.\"), /*#__PURE__*/React.createElement(Form, {\n      onSubmit: this.buttonsubmit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Form.Group, {\n      controlId: \"formBasicEmail\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(Form.Label, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 29\n      }\n    }, \"Email address\"), /*#__PURE__*/React.createElement(Form.Control, {\n      type: \"email\",\n      placeholder: \"Enter email\",\n      onChange: this.inputemail,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 29\n      }\n    }), /*#__PURE__*/React.createElement(Form.Text, {\n      className: \"text-muted\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 29\n      }\n    }, \"We'll never share your email with anyone else.\")), /*#__PURE__*/React.createElement(Form.Group, {\n      controlId: \"formBasicPassword\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(Form.Label, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 29\n      }\n    }, \"Password\"), /*#__PURE__*/React.createElement(Form.Control, {\n      type: \"password\",\n      placeholder: \"Password\",\n      onChange: this.inputpassword,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 29\n      }\n    })), /*#__PURE__*/React.createElement(Button, {\n      onClick: this.setRedirect,\n      variant: \"primary\",\n      type: \"submit\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 25\n      }\n    }, \"Submit\"))));\n  }\n\n}\n\nexport default SignIn;","map":{"version":3,"sources":["C:/Users/fbech/Documents/SIMPLON NATERRE/MySQL_React_Ecommerce/Front/front/src/Component/SignIn.jsx"],"names":["React","Component","Button","Form","Jumbotron","axios","Redirect","SignIn","state","email","password","redirect","setRedirect","setState","renderRedirect","inputemail","event","target","value","inputpassword","buttonsubmit","preventDefault","user","post","then","res","console","log","data","render"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport Button from 'react-bootstrap/Button';\r\nimport Form from 'react-bootstrap/Form';\r\nimport Jumbotron from 'react-bootstrap/Jumbotron'\r\nimport axios from 'axios'\r\nimport { Redirect } from 'react-router-dom';\r\n\r\n\r\n\r\nclass SignIn extends Component {\r\n    state = {\r\n        email: '',\r\n        password: '',\r\n        redirect: false\r\n        // Redirection fausse par defaut\r\n    }\r\n    // ---------REDIRECTION SUR LE DASHBOARD\r\n    setRedirect = () =>{\r\n        this.setState({\r\n            redirect: true\r\n        })\r\n        // Quand redirection devient vraie cest a dire la personne cest loger correctement\r\n    }\r\n\r\n    renderRedirect = () => {\r\n        if (this.state.redirect) {\r\n            return <Redirect to='/Dashboard'/>\r\n            // Redirige vers Dashboard \r\n        }\r\n    }\r\n    //--------ONCHANGE\r\n    //onChange. changer la valeur du state\r\n    inputemail = event => {\r\n        // concerne le input de email un evenement y est creer\r\n        this.setState({ email: event.target.value });\r\n        // Recupere la valeur rentrer dans le input de email et le modifie en fonction de ce qui y est entrer\r\n    }\r\n    inputpassword = event => {\r\n        // concerne le input du password un evenement y est creer\r\n        this.setState({ password: event.target.value });\r\n         // Recupere la valeur rentrer dans le input de password et le modifie en fonction de ce qui y est entrer\r\n\r\n    }\r\n    //---------ONSUBMIT\r\n    //onSubmit creer un evenement au moment du clic\r\n    buttonsubmit = event => {\r\n        event.preventDefault();\r\n\r\n        const user = {\r\n            email: this.state.email,\r\n            password: this.state.password\r\n            // user contient les data de email et passeword\r\n        };\r\n\r\n        axios.post(`http://localhost:4000/sign-in`, user)\r\n            .then(res => {\r\n                console.log(res.data);\r\n                this.setState({ email: '' });\r\n                // Modifie les donnees et les reboot \"\"\r\n                this.setState({ password: '' });\r\n\r\n            })\r\n    }\r\n    render() {\r\n        return (\r\n            <div>\r\n                {this.renderRedirect()}\r\n                <Jumbotron>\r\n                    <h1>Hello, world!</h1>\r\n                    <p>This is a simple hero unit, a simple jumbotron-style component for calling\r\n                        extra attention to featured content or information.</p>\r\n\r\n                    <Form onSubmit={this.buttonsubmit}>\r\n                    {/* On appel on Submit dans le form */}\r\n\r\n\r\n                        <Form.Group controlId=\"formBasicEmail\">\r\n                            <Form.Label>Email address</Form.Label>\r\n                            <Form.Control type=\"email\" placeholder=\"Enter email\" onChange={this.inputemail} />\r\n                            <Form.Text className=\"text-muted\">We'll never share your email with anyone else.</Form.Text>\r\n                        </Form.Group>\r\n\r\n                        <Form.Group controlId=\"formBasicPassword\">\r\n                            <Form.Label>Password</Form.Label>\r\n                            <Form.Control type=\"password\" placeholder=\"Password\" onChange={this.inputpassword} />\r\n                        </Form.Group>\r\n\r\n                        <Button onClick= {this.setRedirect} variant=\"primary\" type=\"submit\">Submit</Button>\r\n                    </Form>\r\n                </Jumbotron>\r\n            </div>\r\n        )\r\n    }\r\n\r\n}\r\n\r\nexport default SignIn; "]},"metadata":{},"sourceType":"module"}